## Sample OCMS simulation scenario file
##
## by Hossein Falaki mhfalaki@uwaterloo.ca
##
## The comments in this file explain what sections a typical OCMS scenario should have
## and what should be in each section

##
## SIMULATION SECTION
##


# Simulation start time (in seconds)
start_time = 300
# Simulation end time
end_time = 0

# Log level. Possible values: INFO, DEBUG, PARANOID
#log_level = PARANOID
log_level = DEBUG
#log_level = INFO
#log_level = OFF

# the log file name
logfile_name = log

# disable standard output logs
STO = OFF
#STO = ON

#
# dataset parameters
#

# dataset file
dataset = waterloo/4/traces/18-06-08.trace
#dataset = rice/user6/19.trace

# dataset time step in seconds
dataset_timestep = 60

# the special characters or ESSIDs to be filtered from the dataset
# you can specify multiple of them in different lines
#dataset_filter = 0

# the frequency threshold of the high pass filter that is applied on 
# data set (to filter out rare and random WiFi APs)
dataset_filter_highpass_freq = 0.1

user = users/2/14-06-08.data



##
## INTERFACES SECTION
##
## All the tags in this section start with the prefix 'interface_'

# total number of interfaces
interface_num = 2

#
# Declarations for the fist interface.
# Interface enumeration starts with zero.
# 

# Name of the first interface. From now on replace the prefix 'interface_' with the 'name_'
interface_0 = wifi1

# Type of the interface just declared. The type values are all upper case
wifi1_type = WIFI

# The data rate of the interface
wifi1_datasendrate = 24576

wifi1_datarecvrate = 24576

# You need to specify energy and monetary costs of the interface. The specific values
# depend on the type of the interface.

# The following energy cost values are Integer. Each one has the format:
# 'source-state'_to_'dest-state' = transition costs  (energy in millijoule)
wifi1_off_to_disc = 8000
wifi1_disc_to_off = 2000
wifi1_disc_to_con = 8000
wifi1_con_to_disc = 0

# Running costs are of the format:
# 'state-name'_run = running cost (power in milliwatt)
wifi1_disc_run = 100
wifi1_con_run = 150

# I just assume this is equal to tx_run
wifi1_discscan_run = 675
wifi1_conscan_run = 675
#wifi1_tx_run = 975
wifi1_tx_run = 150
# I assume RX consumes less power tan TX
wifi1_rx_run = 150

# Running times for scanning states, the format is:
# 'state_name'_time = running time (time in seconds)
wifi1_discscan_time = 0
wifi1_conscan_time = 0
wifi1_association_time = 0


#
# Declarations for the fist interface.
#

# Name of the second interface. From now on replace prefix 'interface_" with the 'name_'
interface_1 = gsm1

# type of the second interface is GSM
gsm1_type = GSM

gsm1_medium = dataset


##
## SCHEDULER SECTION
##

# The type of the scheduler.
# Currently implemented schedulers are: STEPOPTIMAL, DUMB, OPTIMAL, EB
#
# Each type of scheduler has a set of parameters that need to be set.
# This sample configuration file lists them all.

#
# These are the configuration parameters for the STEPOPTIMAL scheduler.
#
#scheduler_type = STEPOPTIMAL

#STEPOPTIMAL_interface = wifi1


#
# These are the configuration parameters for the OPTIMAL scheduler.
#
#scheduler_type = OPTIMAL
OPTIMAL_interface = wifi1
# Amount of data to be transmitted by the interface
OPTIMAL_goal = 0
# Sensitivity to energy and delay
OPTIMAL_energysens = 1
OPTIMAL_delaysens = 0


#
# These are the configuration parameters for the DUMB scheduler
#
#scheduler_type = DUMB
DUMB_interface = wifi1
DUMB_goal = 0

#
# These are the configuration parameters for the Exponential Back-off scheduler
#
#scheduler_type = EB
EB_interface = wifi1
EB_maxbackoff = 86400
EB_goal = 0


#
# These are the configuration parameters for the Linear Back-off scheduler
#
#scheduler_type = LB
LB_interface = wifi1
LB_initialbackoff = 300
LB_backoffstep = 0
LB_randomize = true
LB_goal = 0

#
# These are the configuration parameters for the Static Scan scheduler
#
#scheduler_type = STATIC
STATIC_interface = wifi1
STATIC_gsminterface = gsm1
STATIC_interval = 300
STATIC_randomize = true
STATIC_goal = 0

#
# These are the configuration parameters for the User Static Scan scheduler
#
scheduler_type = USERSTATIC
USERSTATIC_interface = wifi1
USERSTATIC_interval = 300
USERSTATIC_goal = 0
